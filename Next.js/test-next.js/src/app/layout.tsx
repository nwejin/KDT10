// "use client"; -> 클라이언트 컴포넌트
import type { Metadata } from "next";
import Link from 'next/link';
import "./globals.css";
import { useEffect, useState } from "react";
import { Control } from "./Control";

export const metadata: Metadata = {
  title: "Web Tutorials ",
  description: "Generated by jin",
};


// 서버 컴포넌트는 한번 랜더링 시 클라이언트로 보내주기 async 사용
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  // 타입 지정 
  type Topic = {
    id: number;
    title: string;
    body: string;
  }

  // 클라이언트 컴포넌트로 실행
  // const [topics, setTopics] = useState<Topic[]>([]);

  // useEffect(() => {
  //   fetch('http://localhost:9999/topics')
  //   .then(resp => resp.json())
  //   .then(result => {
  //     setTopics(result);
  //   })
  // },[])

  // 서버 컴포넌트로 실행
  const resp = await fetch('http://localhost:9999/topics', {next: {revalidate: 0}}); // cache를 쓰지 않겠다는 의미 == 'no-store'
  const topics = await resp.json();

  return (
    <html>
      <body >
        {/* header */}
        <h1><Link href="/">WEB</Link></h1>
        <ol>
          {topics.map((topic: Topic)=> {
            return (
                  <li key={topic.id}><Link href={`/read/${topic.id}`}>{topic.title}</Link></li>

            )
          })}
  
        </ol>
      {/* body */}
        {children}
        <Control/>
        </body>
    </html>
  );
}
